{"ast":null,"code":"var _jsxFileName = \"/Users/nobyn0312/Documents/GitHub/typescript_practice/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst name = \"hello\";\nlet username = \"hello\";\nlet dummyNum = 2;\nlet bool = true;\nlet array1 = [true, false, true];\nlet arrayName = [\"たけし\", \"みか\"];\n\n// 配列 string型 | 数字\nlet array2 = [\"hello\", 2];\n\n// オブジェクトの型定義\n\nlet nameobj = {\n  first: \"tamada\",\n  last: null\n};\nconsole.log(nameobj);\n\n// 関数の定義\nconst func1 = (x, y) => {\n  return x + y;\n};\n\n// interseption 複数の型 つなぐ\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30C6\\u30B9\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","name","username","dummyNum","bool","array1","arrayName","array2","nameobj","first","last","console","log","func1","x","y","App"],"sources":["/Users/nobyn0312/Documents/GitHub/typescript_practice/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst name =\"hello\";\n\nlet username =\"hello\";\n\nlet dummyNum =2;\n\nlet bool :boolean =true;\n\nlet array1 =[true,false,true];\nlet arrayName =[\"たけし\",\"みか\"];\n\n// 配列 string型 | 数字\nlet array2 =[\"hello\",2];\n\n// オブジェクトの型定義\ninterface NAME{\n  first:string,\n  last:string | null,\n}\n\nlet nameobj :NAME ={first:\"tamada\",last:null}\nconsole.log(nameobj);\n\n// 関数の定義\nconst func1 =(x:number , y:number)=>{\n  return x + y;\n}\n\n// interseption 複数の型 つなぐ\ntype PROFILE ={\n  age:number\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>テスト</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,WAAW;AAAC;AAEnB,MAAMC,IAAI,GAAE,OAAO;AAEnB,IAAIC,QAAQ,GAAE,OAAO;AAErB,IAAIC,QAAQ,GAAE,CAAC;AAEf,IAAIC,IAAa,GAAE,IAAI;AAEvB,IAAIC,MAAM,GAAE,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,CAAC;AAC7B,IAAIC,SAAS,GAAE,CAAC,KAAK,EAAC,IAAI,CAAC;;AAE3B;AACA,IAAIC,MAAM,GAAE,CAAC,OAAO,EAAC,CAAC,CAAC;;AAEvB;;AAMA,IAAIC,OAAa,GAAE;EAACC,KAAK,EAAC,QAAQ;EAACC,IAAI,EAAC;AAAI,CAAC;AAC7CC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;;AAEpB;AACA,MAAMK,KAAK,GAAE,CAACC,CAAQ,EAAGC,CAAQ,KAAG;EAClC,OAAOD,CAAC,GAAGC,CAAC;AACd,CAAC;;AAED;;AAOA,SAASC,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,uBAC5B;QAAA,UAAI;MAAG;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KARQA,GAAG;AAUZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}